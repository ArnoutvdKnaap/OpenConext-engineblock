;;;
; Ini configuration for EngineBlock for all known environments.
;
; Divided in sections per environment like so:
; [acceptance : base]
;
; Meaning 'these are the settings for the acceptance environment,
; based on the base env (inherits from base)'
;
; Editting Rules:
; 1. The first rule of INI files is, you do not talk about INI files.
; 2. The second rule of INI files is is, you DO NOT talk about INI files.
; 3. Names in camelCase (note first character is lowerCase)
; 4. Every configuration item should be present and documented for [base]
; 5. All environments extend from base
; 7. Section inheritance only works one level deep
; 8. If this is your first time editing an INI file, have fun!
;;;

[base]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; PHP SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

phpSettings.memory_limit    = "32M"
phpSettings.display_errors  = false
phpSettings.error_reporting = 6135 ; E_ALL - E_NOTICES

; Timezone to use, for a list of supported timezones, please go to:
; http://www.php.net/manual/en/timezones.php
phpSettings.date.timezone = "Europe/Amsterdam"

; The 'From' header when sending with the PHP 'mail' function.
; http://php.net/manual/en/function.mail.php
phpSettings.sendmail_from = "SURFconext EngineBlock <surfconext-engineblock@example.edu>"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; SAML2 SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; The Encryption keys used for the SAML2 authentication
; When EngineBlock signs responses (when it acts as an Idp)
; or requests (when it acts as an SP) it uses these X.509 certs.
encryption.key.public = ""
encryption.key.private = ""

; Setting the debug mode to true will cause EngineBlock to display more information
; about errors that have occurred and it will show the messages it sends and receives
; for the authentication.
; NEVER TURN THIS ON FOR PRODUCTION
debug = false

; The name of the table that should be used to store user consent
; to release attributes from an Idp to a specific SP
authentication.consent.database.table = "consent"
; Store attributes with their values, meaning that if an Idp suddenly
; sends a new value (like a new e-mail address) consent has to be
; given again.
authentication.consent.storeValues = true

; Where the attribute manipulations are located:
attributeManipulator.file.location = "../attribute-manipulations"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; PROFILE AUTH SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; The configuration entries below are for protecting the profile interface using SimpleSamlphp
; EntityID for the IdentityProvider
auth.simplesamlphp.idp.entityId   = ""

; SingleSignOnLocation to use
auth.simplesamlphp.idp.location   = ""

; SAML2 binding to use
auth.simplesamlphp.idp.binding    = "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"

; PEM encoded public key / certificate for Identity Provider
auth.simplesamlphp.idp.cert       = ""

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; LOGGING / ERROR HANDLING ;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Logging configuration, see also Zend_Log documentation.
; http://framework.zend.com/manual/en/zend.log.html
; Note that we have the following priorities:
; 0 Emergency: system is unusable
; 1 Alert: action must be taken immediately
; 2 Critical: critical conditions
; 3 Error: error conditions
; 4 Warning: warning conditions
; 5 Notice: normal but significant condition
; 6 Informational: informational messages
; 7 Debug: debug messages
logs.file.writerName = "Stream"
logs.file.writerParams.stream = "/var/log/surfconext/engineblock.log"
logs.file.filterName = "Priority"
logs.file.filterParams.priority = 7 ; Everything

logs.syslog.writerName = "Syslog"
logs.syslog.writerParams.application = "SURFconext EngineBlock"
logs.syslog.filterParams.priority = 4 ; Warnings and above
; See: http://nl.php.net/manual/en/function.openlog.php
; Defaults to LOG_USER
;logs.syslog.writerParams.facility = "LOG_USER"

;logs.mail.writerName = "Mail"
;logs.mail.writerNamespace = "EngineBlock_Log_Writer"
;logs.mail.filterName = "Priority"
;logs.mail.filterParams.priority = 3 ; Errors
;logs.mail.writerParams.from.email = "manage@example.edu"
;logs.mail.writerParams.from.name  = "SURFconext EngineBlock"
;logs.mail.writerParams.to.0.name  = "Sysadmin"
;logs.mail.writerParams.to.0.email = "sysadmin@example.edu"
;logs.mail.writerParams.cc.0.name  = "Developer"
;logs.mail.writerParams.cc.0.email = "developer@example.edu"
; Valid transports: Smtp, Pop3, Imap
;logs.mail.writerParams.transportName = "Smtp"
;logs.mail.writerParams.transportParams.host = "localhost"
;logs.mail.writerParams.transportParams.port = 25
;logs.mail.writerParams.transportParams.ssl = "SSL" ; Also supported: "TLS"
; SMTP authentication, supported: Login, Crammd5, Plain
;logs.mail.writerParams.transportParams.auth = "Login"
;logs.mail.writerParams.transportParams.username = ""
;logs.mail.writerParams.transportParams.password = ""

; When an exception occurs during dispatching (probably in a controller)
; and the Dispatcher has been told to use error handling (on by default)
; it will render the following when an error has occurred.
error.module            = "Default"
error.controller        = "Error"
error.action            = "Display"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; LDAP SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; LDAP configuration details for provisioning
; See Zend_LDAP documentation.
; http://framework.zend.com/manual/en/zend.ldap.html
ldap.host               = ""
ldap.useSsl             = true
ldap.userName           = "cn=engineblock,dc=coin,dc=surfnet,dc=nl"
ldap.password           = ""
ldap.bindRequiresDn     = true
ldap.accountDomainName  = "dev.coin.surf.net"
ldap.baseDn             = "dc=coin,dc=surfnet,dc=nl"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; DATABASE SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Database masters are servers that can used for reading & writing
; Database slaves are servers that can used only for reading
; Define your servers on database.servername
; then add them to the proper pool, like database.masters[] = "servername"
; For DSN syntax, see PDO documentation
; http://www.php.net/manual/en/pdo.construct.php
database.master1.dsn = ""
database.master1.user = "engineblock"
database.master1.password = ""
;database.masters[] = "master1"

database.slave1.dsn = ""
database.slave1.user = "engineblock"
database.slave1.password = ""
;database.slaves[] = "slave1"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; MEMCACHE SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;memcache.locahost.host            = "localhost"
;memcache.localhost.port           = 11211
;memcache.localhost.persistent     = true
;memcache.localhost.weight         = 1
;memcache.localhost.timeout        = 1
;memcache.localhost.retry_interval = 15
memcache.servers[] = "localhost"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; SERVICEREGISTRY SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; URL to the Janus REST interface
serviceRegistry.location    = ""
serviceRegistry.user        = ""
serviceRegistry.user_secret = ""
; Caching options for the Service Registry
serviceRegistry.caching.backend.name = "File"
serviceRegistry.caching.backend.options.file_name_prefix = "eb_sr_cache"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; GROUPS SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Grouper settings, parts of the URL to the REST interface of Grouper
grouper.className   = "EngineBlock_Group_Provider_Grouper"
grouper.name        = "SURFteams"

; URI settings
grouper.protocol    = "https"
grouper.host        = "grouper.surfconext.nl"
grouper.user        = "engineblock"
grouper.password    = "FIXME"
grouper.path        = "/grouper-ws/servicesRest"
grouper.version     = "v1_6_000"

; CURL settings
; Can use anything found in: http://php.net/manual/en/function.curl-setopt.php
grouper.timeout = 10;
grouper.ssl_verifyhost = true;
grouper.ssl_verifypeer = false;

groupProviders[] = grouper

; # Additional group providers #
; Name of the class to use, the following are provided by EngineBlock:
; EngineBlock_Group_Provider_: Grouper, OpenSocial_HttpBasic and OpenSocial_Oauth_ThreeLegged
;provider2.className                       = "EngineBlock_Group_Provider_OpenSocial_HttpBasic"
; Display name for in the GUI
;provider2.name                            = "Provider 2"
; Endpoint URL
;provider2.url                             = "https://provider2.example.edu/"
;
; HTTP Basic credentials of HttpBasic provider
;provider2.auth.user                       = "name"
;provider2.auth.password                   = "password"
;
; OAuth credentials for OAuth provider
; See: http://framework.zend.com/manual/en/zend.oauth.introduction.html
;provider2.auth.requestScheme = "header"
;provider2.auth.requestMethod = "POST"
;
;provider2.auth.consumerKey     = ""
;provider2.auth.consumerSecret  = ""
; Supported: "HMAC-SHA1", "HMAC-SHA256", "RSA-SHA1", "PLAINTEXT"
;provider2.auth.signatureMethod = "HMAC-SHA1"
;
;provider2.auth.callbackUrl          = "https://profile.ebdev.net/profile/group-oauth/consume/hz"
;provider2.auth.siteUrl              = "https://provider2.example.edu/"
;provider2.auth.requestTokenUrl      = "https://provider2.example.edu/request_token"
;provider2.auth.accessTokenUrl       = "https://provider2.example.edu/access_token"
;provider2.auth.authorizeUrl         = "https://provider2.example.edu/authorize"
;provider2.auth.userAuthorizationUrl = "https://provider2.example.edu/authorize"

; For "RSA-SHA1" signatureMethod:
;provider2.auth.rsaPrivateKey = ""
;provider2.auth.rsaPublicKey  = ""

; You should never need to change this:
;provider2.auth.version = "1.0"
;
; Settings for the HTTP client
; See: http://framework.zend.com/manual/en/zend.http.client.html#zend.http.client.configuration
;provider2.timeout = 10
;
; Preconditions, must be true or the provider won't be used
;provider2.preconditions.0.className       = "EngineBlock_Group_Provider_Precondition_UserId_PregMatch"
;provider2.preconditions.0.search          = "|urn:collab:person:provider2.example.edu:(.+)|"
;
; Filters to apply when converting from the Providers groups to EngineBlock Groups
;provider2.groupFilters.0.className        = "EngineBlock_Group_Provider_Filter_ModelProperty_PregReplace"
;provider2.groupFilters.0.property         = "id"
;provider2.groupFilters.0.search           = "|(.+)|"
;provider2.groupFilters.0.replace          = "urn:collab:group:provider2.example.edu:$1"
;
; Filters to apply when converting from the Providers group members to EngineBlock group members
;provider2.groupMemberFilters.0.className  = "EngineBlock_Group_Provider_Filter_ModelProperty_PregReplace"
;provider2.groupMemberFilters.0.property   = "id"
;provider2.groupMemberFilters.0.search     = "|(.+)|"
;provider2.groupMemberFilters.0.replace    = "urn:collab:person:provider2.example.edu:$1"
;
; Decorators add extra functionality or change behaviour run-time for the group provider
; The example below replaces the EngineBlock User Id with something the provider understands
;hz.decorators.0.className          = "EngineBlock_Group_Provider_Decorator_UserIdReplace";
;hz.decorators.0.search             = "|urn:collab:person:provider2.example.edu:(.+)|"
;hz.decorators.0.replace            = "$1"
;
; Add the provider to the list of group providers
;groupProviders[] = provider2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; PROVISIONING SETTINGS ;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Extra (external) provisioning
;provisioners.0.className = "EngineBlock_Provisioner_ProvisioningManager"
;provisioners.0.url       = ""

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; MISCELLANEOUS SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

defaults.title      = "SURFconext"
defaults.header     = "SURFconext"
defaults.subheader  = ""
defaults.layout     = "1-column-blue-grey"

; Static URI settings
static.protocol     = "https"
static.host         = "static.surfconext.nl"

; Language Cookie settings
cookie.lang.domain = "surfconext.nl"
; Cookie expiry time, specify the time in seconds, set empty to let the cooky get expired after the session
cookie.lang.expiry = "5184000" ; 60 days in seconds
